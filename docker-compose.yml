version: '3.8'

networks:
  arquitectura_network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

services:
  # ==========================================
  # BASE DE DATOS MONGODB
  # ==========================================
  mongodb:
    build:
      context: ./mongodb-setup
      dockerfile: Dockerfile
    container_name: arquitectura_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: arquitectura_software
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongodb-setup/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - arquitectura_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # ==========================================
  # INTERFAZ WEB MONGO EXPRESS
  # ==========================================
  mongo-express:
    image: mongo-express:latest
    container_name: mongo_express_ui
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - arquitectura_network

  # ==========================================
  # BUS DE MENSAJES
  # ==========================================
  bus:
    build:
      context: ./BUS
      dockerfile: Dockerfile
    container_name: arquitectura_bus
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      BUS_HOST: 0.0.0.0
      BUS_PORT: 5000
      PYTHONUNBUFFERED: 1
    networks:
      - arquitectura_network
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; s=socket.socket(); s.connect(('localhost', 5000)); s.close()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================
  # SERVICIO: LLAMADAS
  # ==========================================
  servicio-llamadas:
    build:
      context: ./servicios
      dockerfile: Dockerfile
    container_name: servicio_llamadas
    restart: unless-stopped
    environment:
      BUS_HOST: bus
      BUS_PORT: 5000
      MONGO_URI: mongodb://app_user:app_password_123@mongodb:27017/arquitectura_software?authSource=admin
      PYTHONUNBUFFERED: 1
    command: python -u llamadas.py
    depends_on:
      bus:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    networks:
      - arquitectura_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================
  # SERVICIO: AUTENTICACIÓN
  # ==========================================
  servicio-autenticacion:
    build:
      context: ./servicios
      dockerfile: Dockerfile
    container_name: servicio_autenticacion
    restart: unless-stopped
    environment:
      BUS_HOST: bus
      BUS_PORT: 5000
      MONGO_URI: mongodb://app_user:app_password_123@mongodb:27017/arquitectura_software?authSource=admin
      PYTHONUNBUFFERED: 1
    command: python -u autenticacion.py
    depends_on:
      bus:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    networks:
      - arquitectura_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================
  # SERVICIO: MENSAJERÍA
  # ==========================================
  servicio-mensajeria:
    build:
      context: ./servicios
      dockerfile: Dockerfile
    container_name: servicio_mensajeria
    restart: unless-stopped
    environment:
      BUS_HOST: bus
      BUS_PORT: 5000
      MONGO_URI: mongodb://app_user:app_password_123@mongodb:27017/arquitectura_software?authSource=admin
      PYTHONUNBUFFERED: 1
    command: python -u mensajeria.py
    depends_on:
      bus:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    networks:
      - arquitectura_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================
  # SERVICIO: ADMINISTRACIÓN
  # ==========================================
  servicio-administracion:
    build:
      context: ./servicios
      dockerfile: Dockerfile
    container_name: servicio_administracion
    restart: unless-stopped
    environment:
      BUS_HOST: bus
      BUS_PORT: 5000
      MONGO_URI: mongodb://app_user:app_password_123@mongodb:27017/arquitectura_software?authSource=admin
      PYTHONUNBUFFERED: 1
    command: python -u administracion.py
    depends_on:
      bus:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    networks:
      - arquitectura_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ==========================================
  # SERVICIO: REGISTRO DE LLAMADAS
  # ==========================================
  servicio-registro-llamadas:
    build:
      context: ./servicios
      dockerfile: Dockerfile
    container_name: servicio_registro_llamadas
    restart: unless-stopped
    environment:
      BUS_HOST: bus
      BUS_PORT: 5000
      MONGO_URI: mongodb://app_user:app_password_123@mongodb:27017/arquitectura_software?authSource=admin
      PYTHONUNBUFFERED: 1
    command: python -u registro_llamadas.py
    depends_on:
      bus:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    networks:
      - arquitectura_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"